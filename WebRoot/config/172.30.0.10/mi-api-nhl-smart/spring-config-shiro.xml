<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
          http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <context:property-placeholder location="classpath:resources.properties"/>

    <bean id="myRealm" class="cn.com.cis.mi.api.security.Realm">
        <property name="pwdsaltprefix" value="a"/>
        <property name="pwdsaltsuffix" value="b"/>
        <property name="expireTime" value="86400"/>
    </bean>

    <bean id="sessionManager" class="cn.com.cis.mi.api.security.SessionManager">
        <property name="sessionDAO" ref="sessionDAO"/>
        <property name="sessionIdCookieEnabled" value="true"/>
        <!--<property name="sessionIdCookie.name" value="sid"/>-->
        <!--<property name="sessionIdCookie.path" value="/"/>-->
        <property name="sessionIdCookie.maxAge" value="86400"/>     <!-- cookie 有效时间为1小时 （秒单位）-->
        <property name="sessionValidationInterval" value="60000"/>  <!-- 相隔多久检查一次session的有效性 -->
        <property name="globalSessionTimeout" value="86400000"/>     <!-- session 有效时间为1天 （毫秒单位）-->
    </bean>

    <bean id="sessionDAO" class="cn.com.cis.mi.api.security.SessionDao">
        <property name="appCode" value="${sys.app.code}"/>
    </bean>

    <!-- Shiro默认会使用Servlet容器的Session,可通过sessionMode属性来指定使用Shiro原生Session -->
    <!-- 即<property name="sessionMode" value="native"/>,详细说明见官方文档 -->
    <!-- 这里主要是设置自定义的单Realm应用,若有多个Realm,可使用'realms'属性代替 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="myRealm"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>

    <!--<bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="sessionIdCookieEnabled" value="true" />
        <property name="sessionIdCookie.name" value="sid"/>
        <property name="sessionIdCookie.path" value="/"/>
        <property name="sessionIdCookie.maxAge" value="3600" />     &lt;!&ndash; cookie 有效时间为1小时 （秒单位）&ndash;&gt;
        <property name="sessionValidationInterval" value="60000"/>  &lt;!&ndash; 相隔多久检查一次session的有效性 &ndash;&gt;
        <property name="globalSessionTimeout" value="3600000"/>     &lt;!&ndash; session 有效时间为1小时 （毫秒单位）&ndash;&gt;
    </bean>-->

    <bean id="jsonAuthenticationFilter" class="cn.com.cis.mi.api.security.AppAuthenticationFilter">
        <property name="usernameParam" value="phone"/>
        <property name="passwordParam" value="pwd"/>
    </bean>
    <bean id="appLogoutFilter" class="cn.com.cis.mi.api.security.AppLogoutFilter">
    </bean>

    <bean id="accessTokenFilter" class="cn.com.cis.mi.api.security.AccessTokenFilter">
        <property name="projectUrl" value="https://doctor.120.link"/>
	<property name="allowUrls">
            <list>
                <!-- 如果请求中包含以下路径，则不进行拦截 -->
                <value>/login</value>
                <value>/downloadfile</value>
            </list>
        </property>
    </bean>

    <bean id="accessTokenManager" class="cn.com.cis.mi.api.common.AccessTokenManager"/>

    <!-- Shiro主过滤器本身功能十分强大,其强大之处就在于它支持任何基于URL路径表达式的、自定义的过滤器的执行 -->
    <!-- Web应用中,Shiro可控制的Web请求必须经过Shiro主过滤器的拦截,Shiro对基于Spring的Web应用提供了完美的支持 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- Shiro的核心安全接口,这个属性是必须的 -->
        <property name="securityManager" ref="securityManager"/>
        <!--&lt;!&ndash; 要求登录时的链接(可根据项目的URL进行替换),非必须的属性,默认会自动寻找Web工程根目录下的"/login.jsp"页面 &ndash;&gt;-->
        <property name="loginUrl" value="/login"/>
        <!--&lt;!&ndash; 登录成功后要跳转的连接(本例中此属性用不到,因为登录成功后的处理逻辑在LoginController里硬编码为main.jsp了) &ndash;&gt;-->
        <!--<property name="successUrl" value="/testx"/>-->
        <!--&lt;!&ndash; 用户访问未对其授权的资源时,所显示的连接 &ndash;&gt;-->
        <!--&lt;!&ndash; 若想更明显的测试此属性可以修改它的值,如unauthor.jsp,然后用[玄玉]登录后访问/admin/listUser.jsp就看见浏览器会显示unauthor.jsp &ndash;&gt;-->
        <!--<property name="unauthorizedUrl" value="/login"/>-->

        <property name="filters">
            <util:map>
                <entry key="authc" value-ref="jsonAuthenticationFilter"/>
                <entry key="accessToken" value-ref="accessTokenFilter"/>
                <entry key="logout" value-ref="appLogoutFilter"/>
            </util:map>
        </property>

        <property name="filterChainDefinitions">
            <value>
                /logout = logout
                /index/**= anon
                /static/**= anon
                /icon/**= anon
                /p/sendvcode1/**= anon
                /p/setpwd/**= anon
                /chkonline/**= anon
                /getareas/**= anon
                /gethospitals/**= anon
                /aboutus/**= anon
                /help/**= anon
                /yhxy/**= anon
                /getandroidversion/**= anon
                /getiosversion/**= anon
                /test/nullpointer = anon
		/register/**= anon
		/register/sendauthcode/**= anon
		/mztk/**= anon
		/version/**=anon 
		/** = authc,accessToken
            </value>
        </property>
    </bean>

    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

</beans>
